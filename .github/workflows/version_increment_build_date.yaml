name: Main - Increment Version Patch & Update Build Date

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  increment_version:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Verify PAT Secret
      env:
        ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
      run: |
        if [ -z "${ACTIONS_PAT}" ]; then
          echo "Error: Unable to find the PAT secret for permissions."
          exit 1
        fi

    - name: Increment version patch number & Update Build Date
      id: increment_version
      run: |
        # Extract the current version
        current_version=$(awk -F'[(), ]+' '/^__version_info__/ {print $3 "." $4 "." $5}' __init__.py)
        #grep "^__version_info__" __init__.py
        #echo $current_version

        # Ensure current_version is correctly extracted
        echo "Extracted current_version: $current_version"
        current_version=${current_version//\'/}
        #echo $current_version

        if [ -z "$current_version" ]; then
          echo "Error: Unable to extract the current version."
          exit 1
        fi

        # Increment the patch version
        new_version=$(echo $current_version | awk -F. '{printf("%d.%d.%d", $1, $2, $3+1)}')
        #echo $new_version

        # Create new version info with single quotes around each numeric value
        new_version_info=$(echo $new_version | awk -F. '{printf("\x27%d\x27, \x27%d\x27, \x27%d\x27", $1, $2, $3)}')
        #echo $new_version_info

        # Update the __init__.py file with the new version info
        echo -n "Before: " && grep "^__version_info__" __init__.py
        sed -i -E "s/^__version_info__ = \(.*\)/__version_info__ = \($new_version_info\)/" __init__.py
        echo -n "After:  " && grep "^__version_info__" __init__.py

        # Update Build-Date in __init__.py with current date
        echo -n "Before: " && grep "^__build_date__" __init__.py
        current_date=$(date +'%Y-%m-%d-%H-%M-%S')
        sed -i "s/__build_date__ = .*/__build_date__ = '$current_date'/g" __init__.py
        echo -n "After:  " && grep "^__build_date__" __init__.py

    - name: Commit and push version increment
      env:
        ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
      run: |
        if [ -z "${ACTIONS_PAT}" ]; then
          echo "Error: Aborting with missing PAT secret."
          exit 1
        fi
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add __init__.py
        git commit -m "Increment version patch number"
        git pull
        git push https://x-access-token:${ACTIONS_PAT}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}

    - name: Create and push git tag
      env:
        ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
      run: |
        if [ -z "${ACTIONS_PAT}" ]; then
          echo "Error: Aborting with missing PAT secret."
          exit 1
        fi
        # Extract the current version
        new_version=$(awk -F'[(), ]+' '/^__version_info__/ {print $3 "." $4 "." $5}' __init__.py)
        
        # Ensure current_version is correctly extracted
        new_version=${new_version//\'/}

        tag_name="v$new_version"
        echo "Creating tag: $tag_name"
        git tag $tag_name
        git push https://x-access-token:${ACTIONS_PAT}@github.com/${{ github.repository }}.git $tag_name
